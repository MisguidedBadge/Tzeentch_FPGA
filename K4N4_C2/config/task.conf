# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# Configuration file for running experiments
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# timeout_each_job : FPGA Task script splits fpga flow into multiple jobs
# Each job execute fpga_flow script on combination of architecture & benchmark
# timeout_each_job is timeout for each job
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

[GENERAL]
run_engine=openfpga_shell
power_tech_file = ${PATH:OPENFPGA_PATH}/openfpga_flow/tech/PTM_45nm/45nm.xml
power_analysis = true
spice_output=false
verilog_output=true
timeout_each_job = 20*60
fpga_flow=yosys_vpr
#arch_variable_file=${PATH:TASK_DIR}/design_variables.yml 


[OpenFPGA_SHELL]
openfpga_shell_template=${PATH:OPENFPGA_PATH}/openfpga_flow/Tzeentch_FPGA/K4N4_C2/full_testbench_example_script.openfpga
openfpga_arch_file=${PATH:OPENFPGA_PATH}/openfpga_flow/Tzeentch_FPGA/K4N4_C2/k4_N4_Skywater.xml
openfpga_sim_setting_file=${PATH:OPENFPGA_PATH}/openfpga_flow/openfpga_simulation_settings/auto_sim_openfpga.xml
# Use a absolute path for the Verilog netlists to be generated
# This is designed to allow the test case 'basic_tests/generate_testbench'
# to use the Verilog netlists along with testbenches in HDL simulation
openfpga_verilog_output_dir=${PATH:OPENFPGA_PATH}/openfpga_flow/tasks/prometheus/latest/k4_N4_tileable_40nm/and2/MIN_ROUTE_CHAN_WIDTH
### Don't forget to pad with IO -> 3x3 -> CLB
openfpga_vpr_device_layout = 2x2
openfpga_vpr_route_chan_width= 300


[ARCHITECTURES]


arch0=${PATH:OPENFPGA_PATH}/openfpga_flow/Tzeentch_FPGA/K4N4_C2/k4_N4_tileable_40nm.xml


[BENCHMARKS]
bench1=${PATH:OPENFPGA_PATH}/openfpga_flow/benchmarks/micro_benchmark/and2/and2.v


[SYNTHESIS_PARAM]
bench_read_verilog_options_common = -nolatches


bench1_top = and2
bench1_chan_width = 300

[SCRIPT_PARAM_MIN_ROUTE_CHAN_WIDTH]
